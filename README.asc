= pgerror
This extension adds a few tools to make it easier to handle errors in Postgres

== INCOMPATIBILITIES
Some of the fields in the `error_data` type have different names than those
used in the PLPGSQL RAISE command. This was done because the PLPGSQL names are
reserved words, which makes referring to them difficult.

== `error_data`
This is a compound type that can be passed around or stored in a table. It
contains fields that correspond to every available detail for an exception.

== error_data()
Convenience function for constructing an `error_data` type.

== `raise()`
These functions will raise the specified error. You may pass in either
individual fields or an `error_data` type. Any fields that are `NULL` or an
empty string (`''`) are not added to the `RAISE` command and will not appear in
the output.

[NOTE]
Unlike PLPGSQL, these functions treat an empty string (`''`) and `NULL` the
same. This means it's not possible to add an empty string to an exception.

== try()
This function will execute the SQL in the `code` parameter and return the
number of rows affected (NULL on an error), or an `error_data` record if an
error occurred (NULL if no error).

== `try_cursor()`
Similar to `try()`, except `query` is opened as a cursor, and a reference to
that cursor is returned in `result`. If `cursor_name` isn't specified an
un-named cursor is created.

Copyright and License
---------------------
pgerror is released under a https://github.com/decibel/cattools/blob/master/LICENSE[MIT liscense].

Copyright (c) 2016 Jim Nasby <Jim.Nasby@BlueTreble.com>.
